apiVersion: m4e.krestomat.io/v1alpha1
kind: M4e
metadata:
  # name should be less than 26 characters
  name: m4e-sample
spec:
  ## Moodle new instance
  # moodle_new_instance: true
  moodle_new_instance_agree_license: true
  moodle_new_instance_fullname: Demo site
  moodle_new_instance_shortname: demo
  moodle_new_instance_summary: A demo site
  ## Admin credentials. MUST CHANGED
  moodle_new_instance_adminuser: admin
  moodle_new_instance_adminmail: admin@example.com

  ## Set a new admin password with a BCrypt compatible hash. Example for 'changeme' hash as password:
  moodle_new_adminpass_hash: $2b$10$zbRuwPil1wNWQUkvlkchwe3/rOljJvoheydndKH1X0bdIIigy0xim

  ## Database connection and credentials
  ### You could use postgres-operator (see below for section "Other integrations" about how to do so).
  ### Otherwise, set the following variables for a connection to a running db instance:
  # moodle_config_dbhost: db_host
  # moodle_config_dbname: db_name
  # moodle_config_dbuser: db_user
  # moodle_config_dbpass: db_pass

  ## Moodle config.php
  # moodle_config_additional_cfg:
  #   property_name_one: "one"
  #   property_name_two: 2
  # moodle_config_additional_block: |
  #   $CFG->property_name_one = 'value';
  #   $CFG->property_name_two = 2;

  ## Whether the operator do minor and major updates as soon as version code in images changes
  ## Default is:
  # moodle_update_minor: true
  # moodle_update_major: false

  ## Moodle host and protocol. Default is 'http'
  # moodle_host: "m4e.krestomat.io"
  # moodle_protocol: http

  ## Moodledata storage
  # moodle_pvc_moodledata_size: 1Gi
  # moodle_pvc_moodledata_storage_access_mode: ReadWriteOnce
  # moodle_pvc_moodledata_storage_class_name: false

  ## Number of replicas
  # moodle_size: 1
  # nginx_size: 1

  ## Container images
  # moodle_image: quay.io/krestomatio/moodle_web
  # nginx_image: quay.io/krestomatio/moodle_web
  # postgres_image: quay.io/krestomatio/postgres

  ## Database storage
  # postgres_pvc_data_size: 1Gi
  # postgres_pvc_data_storage_access_mode: ReadWriteOnce
  # postgres_pvc_data_storage_class_name: false

  ## Other integrations
  ### postgres-operator:
  ### If using Krestomatio postgres-operator, just set 'moodle_postgres_meta_name'
  ### to  a Postgres CR name created in the same namespace. Credentials will be fetch with that variable. Ex, for a Postgres CR named 'postgres-sample':
  # moodle_postgres_meta_name: postgres-sample

  ### keydb-operator:
  ### If using Krestomatio keydb-operator for redis cache, just set 'moodle_keydb_meta_name'
  ### to a Keydb CR name created in the same namespace. Credentials and respective moodle config will be done using that variable. Ex, for a Keydb CR named 'keydb-sample':
  # moodle_keydb_meta_name: 'keydb-sample'

  ### nfs-operator:
  ### If using Krestomatio nfs-operator for moodledata shared storage, just set 'moodle_nfs_meta_name'
  ### to a Server CR name created in the same namespace. An inline csi nfs volume source will be use from that variable, instead of creating a PVC:
  # moodle_nfs_meta_name: 'server-sample'
